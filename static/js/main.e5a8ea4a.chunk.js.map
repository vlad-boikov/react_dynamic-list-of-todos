{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","types/FilterType.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedItem","setSelectedItem","loading","isLoading","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","filter","setQuery","setFilter","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterType","Loader","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","setIsLoading","hasError","setHasError","result","catch","finally","filterTodos","useCallback","filterType","queryValue","allTodos","filteredQuery","toLocaleLowerCase","includes","trim","active","all","Error","visibleTodos","useMemo","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5a8ea4a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedItem: Todo | null,\n  setSelectedItem: (todo: Todo) => void,\n  isLoading: boolean,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedItem,\n  setSelectedItem,\n  isLoading: loading,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    {!loading && (\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n    )}\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            {\n              'has-background-info-light':\n              selectedItem?.id === todo.id,\n            },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            {/* eslint-disable-next-line max-len */}\n            <p className={todo.completed ? 'has-text-success' : 'has-text-danger'}>\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedItem(todo)}\n            >\n              <span className=\"icon\">\n                {/* eslint-disable-next-line max-len */}\n                <i className={selectedItem?.id === todo.id ? 'far fa-eye-slash' : 'far fa-eye'} />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  query: string,\n  filter: string,\n  setQuery: (value: string) => void,\n  setFilter: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  filter,\n  setQuery,\n  setFilter,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={e => setFilter(e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n        className=\"input\"\n        placeholder=\"Search...\"\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {!!query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterType {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedItem: Todo\n  setSelectedItem: (todo: null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedItem,\n  setSelectedItem,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedItem.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedItem.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedItem(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedItem.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectedItem.completed\n                ? (\n                  <strong\n                    className=\"has-text-success\"\n                  >\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong\n                    className=\"has-text-danger\"\n                  >\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterType } from './types/FilterType';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [selectedItem, setSelectedItem] = useState<Todo | null>(null);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(result => {\n        setTodos(result);\n      })\n      .catch(() => {\n        setHasError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const filterTodos = useCallback((\n    filterType: string,\n    queryValue: string,\n    allTodos: Todo[],\n  ) => {\n    const filteredQuery = allTodos.filter(todo => todo.title.toLocaleLowerCase().includes(queryValue.toLocaleLowerCase().trim()));\n    const active = filteredQuery.filter(todo => !todo.completed);\n    const completed = filteredQuery.filter(todo => todo.completed);\n\n    switch (filterType) {\n      case FilterType.all:\n        return !queryValue ? allTodos : filteredQuery;\n      case FilterType.active:\n        return active;\n      case FilterType.completed:\n        return completed;\n      default:\n        throw new Error('No filter type');\n    }\n  }, []);\n\n  const visibleTodos = useMemo(() => filterTodos(filter, query, todos), [filter, query, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filter={filter}\n                setQuery={setQuery}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {hasError && (\n                <h3 style={{ color: 'tomato' }}>\n                  Todos loading error\n                </h3>\n              )}\n              {isLoading && <Loader />}\n              {!isLoading && !hasError && (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedItem={selectedItem}\n                  setSelectedItem={setSelectedItem}\n                  isLoading={isLoading}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedItem && (\n        <TodoModal\n          selectedItem={selectedItem}\n          setSelectedItem={setSelectedItem}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}